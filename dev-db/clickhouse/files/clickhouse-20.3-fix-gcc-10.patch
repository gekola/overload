From f748021d9a0458b1857d2dbbcc9a61d47928228a Mon Sep 17 00:00:00 2001
From: Azat Khuzhin <a3at.mail@gmail.com>
Date: Thu, 14 May 2020 20:42:32 +0300
Subject: [PATCH 1/3] Use libc-headers only for BUNDLED build (fixes gcc10
 unbundled build)

libstdc++ from gcc10 uses pthread_mutex_clocklock() which is not yet
exists in contrib/libc-headres.

P.S. I can prepare an update for libc-contrib
---
 cmake/linux/default_libs.cmake | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/cmake/linux/default_libs.cmake b/cmake/linux/default_libs.cmake
index d18a996e2c9..0ecdfd2a3ad 100644
--- a/cmake/linux/default_libs.cmake
+++ b/cmake/linux/default_libs.cmake
@@ -21,7 +21,7 @@ set(CMAKE_C_STANDARD_LIBRARIES ${DEFAULT_LIBS})
 # glibc-compatibility library relies to fixed version of libc headers
 # (because minor changes in function attributes between different glibc versions will introduce incompatibilities)
 # This is for x86_64. For other architectures we have separate toolchains.
-if (ARCH_AMD64)
+if (ARCH_AMD64 AND NOT_UNBUNDLED)
     set(CMAKE_C_STANDARD_INCLUDE_DIRECTORIES ${ClickHouse_SOURCE_DIR}/contrib/libc-headers/x86_64-linux-gnu ${ClickHouse_SOURCE_DIR}/contrib/libc-headers)
     set(CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES ${ClickHouse_SOURCE_DIR}/contrib/libc-headers/x86_64-linux-gnu ${ClickHouse_SOURCE_DIR}/contrib/libc-headers)
 endif ()

From b7d46fe979f7b747ea27ad7b1059193674ff762e Mon Sep 17 00:00:00 2001
From: Azat Khuzhin <a3at.mail@gmail.com>
Date: Thu, 14 May 2020 20:42:32 +0300
Subject: [PATCH 2/3] Add missing headers for libstdc++ from gcc10

---
 src/Interpreters/addMissingDefaults.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/Interpreters/addMissingDefaults.h b/src/Interpreters/addMissingDefaults.h
index d9d8d3d4f22..cc84f413b16 100644
--- a/src/Interpreters/addMissingDefaults.h
+++ b/src/Interpreters/addMissingDefaults.h
@@ -1,6 +1,7 @@
 #pragma once
 
 #include <unordered_map>
+#include <string>
 
 
 namespace DB

From c059ee008519cff43b42022fc6f6a9d8ee86c56c Mon Sep 17 00:00:00 2001
From: Azat Khuzhin <a3at.mail@gmail.com>
Date: Thu, 14 May 2020 20:42:32 +0300
Subject: [PATCH 3/3] Use is_trivial+is_standard_layout over is_pod (later is
 deprecated)

---
 src/Common/Dwarf.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/Common/Dwarf.cpp b/src/Common/Dwarf.cpp
index 6d3d8fdf0ee..7a697a2c9ef 100644
--- a/src/Common/Dwarf.cpp
+++ b/src/Common/Dwarf.cpp
@@ -104,7 +104,7 @@ namespace
 
 // Read (bitwise) one object of type T
 template <typename T>
-std::enable_if_t<std::is_pod_v<T>, T> read(std::string_view & sp)
+std::enable_if_t<std::is_trivial_v<T> && std::is_standard_layout_v<T>, T> read(std::string_view & sp)
 {
     SAFE_CHECK(sp.size() >= sizeof(T), "underflow");
     T x;
