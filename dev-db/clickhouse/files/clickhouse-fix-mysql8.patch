--- a/libs/libmysqlxx/src/Connection.cpp
+++ b/libs/libmysqlxx/src/Connection.cpp
@@ -111,7 +111,7 @@
         throw ConnectionFailed(errorMessage(driver.get()), mysql_errno(driver.get()));
 
     /// Enables auto-reconnect.
-    my_bool reconnect = true;
+    bool reconnect = true;
     if (mysql_options(driver.get(), MYSQL_OPT_RECONNECT, reinterpret_cast<const char *>(&reconnect)))
         throw ConnectionFailed(errorMessage(driver.get()), mysql_errno(driver.get()));
 
--- a/contrib/mariadb-connector-c-cmake/linux_x86_64/libmariadb/ma_client_plugin.c
+++ b/contrib/mariadb-connector-c-cmake/linux_x86_64/libmariadb/ma_client_plugin.c
@@ -50,7 +50,7 @@
   struct st_mysql_client_plugin *plugin;
 };
 
-static my_bool initialized= 0;
+static bool initialized= 0;
 static MA_MEM_ROOT mem_root;
 
 static uint valid_plugins[][2]= {
From 17a7cb8735cc51684f5c519a8ccc26f66e774c68 Mon Sep 17 00:00:00 2001
From: Rafael David Tinoco <rafaeldtinoco@ubuntu.com>
Date: Tue, 20 Aug 2019 02:38:47 +0000
Subject: [PATCH] MySQL 8 integration requires previous declaration checks

C and C++ differ in the form of types being defined. While C++ structs
are defined also as new types, in C you have to explicitly typedef the
struct to have a new type.

Fir this case, it was enough to check if MySQL header was already
defined in order not to re-declare MYSQL, MYSQL_RES, MYSQL_ROW and
MYSQL_FIELD.

Signed-off-by: Rafael David Tinoco <rafaeldtinoco@ubuntu.com>
---
 libs/libmysqlxx/include/mysqlxx/Types.h | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/libs/libmysqlxx/include/mysqlxx/Types.h b/libs/libmysqlxx/include/mysqlxx/Types.h
index 30abdeb9fd0..b5ed70916fa 100644
--- a/libs/libmysqlxx/include/mysqlxx/Types.h
+++ b/libs/libmysqlxx/include/mysqlxx/Types.h
@@ -3,6 +3,8 @@
 #include <cstdint>
 #include <string>
 
+#ifndef _mysql_h
+
 struct st_mysql;
 using MYSQL = st_mysql;
 
@@ -14,7 +16,7 @@ using MYSQL_ROW = char**;
 struct st_mysql_field;
 using MYSQL_FIELD = st_mysql_field;
 
-
+#endif
 
 namespace mysqlxx
 {
